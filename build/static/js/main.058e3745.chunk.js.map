{"version":3,"sources":["components/Filter.js","components/Submit.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","onChange","onChangeHandler","type","Submit","onSubmitHandler","nameChangeHandler","phoneChangeHandler","nameValue","phoneValue","onSubmit","htmlFor","id","value","Persons","persons","filterValue","deletePersonHandler","personsToShow","i","length","name","toLowerCase","includes","push","console","log","map","person","number","onClick","Notification","message","notificationStyle","border","borderRadius","fontStyle","fontSize","padding","marginBottom","notificationType","borderColor","color","backgroundColor","style","baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","delete","update","personToModify","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterValue","notificationMessage","setNotificationMessage","useEffect","personsFromServer","catch","error","displayNotification","setTimeout","event","target","preventDefault","find","window","confirm","modifiedPerson","modifiedPersonList","forEach","filter","addedPerson","concat","JSON","stringify","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.058e3745.chunk.js","sourcesContent":["const Filter = (props) => {\n    \n    return (\n        <div>\n            Filter by name : <input onChange={props.onChangeHandler} type=\"text\"/>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst Submit = ({onSubmitHandler, nameChangeHandler, phoneChangeHandler, nameValue, phoneValue}) => {\n    return (\n        <form onSubmit={onSubmitHandler}>\n            <h3>Add a new person :</h3>\n        <ul>\n            <li>\n                <label htmlFor=\"name\">Name :</label>\n                <input onChange={nameChangeHandler} type='text' id='name' value={nameValue}/>\n            </li>\n            <li>\n                <label htmlFor=\"phone\">Phone :</label>\n                <input onChange={phoneChangeHandler} type='phone' id='phone' value={phoneValue}/>\n            </li>\n        </ul>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    );\n};\n\nexport default Submit;","import React from 'react';\n\nconst Persons = ({persons, filterValue, deletePersonHandler}) => {\n    //------    PERSONS FILTERING PROCESS    ------//\n  const personsToShow = [] //Create an empty array to contain the objects of persons to show, we need to declare it empty at each new state render to ensure that we only show the current filtervalue\n\n  for(let i = 0 ; i < persons.length ; i++){\n\n    //LOG DEVELOPPEMENT TESTS\n    /* console.log(`persons[${i}] :>> `, persons[i].name.toLowerCase());\n    console.log('includes a >>', persons[i].name.toLowerCase().includes('a')); */\n\n    if (persons[i].name.toLowerCase().includes(filterValue.toLowerCase())){ //Compares the values of lower case name property of deach person in persons, with the actual filter value (lower case as well)\n      personsToShow.push(persons[i])//If there is a match, we push the person to the persons to show array\n      console.log('Render the person :', persons[i].name);\n    }\n  }\n  //const personsToShow = personsLowerCase.filter(person => person.name.includes(filterValue.toLowerCase()))\n  //console.log('Persons to show -> ', personsToShow)\n\n  //ISSUE : This type of filtering generates a new iteration of the array at each global state change (even when the filter hasn't changed for example) which is useless and can require many coputational resources.\n    return (\n        <table>\n          <tbody>\n            {personsToShow.map(person => \n            <tr key={person.name}>\n                <td>{person.name}</td>\n                <td>{person.number}</td>\n                <td><button onClick={() => deletePersonHandler(person.id)}>delete</button></td>\n            </tr>\n            )}\n          </tbody>\n      </table>\n    );\n};\n\nexport default Persons;","import React from 'react';\n\n\nconst Notification = ({message}) => {\n    if (message === null){\n        return null\n    }\n    var notificationStyle = {\n        border: \"2px solid\",\n        borderRadius: \"5px\",\n        fontStyle: 'italic',\n        fontSize:'16px',\n        padding:'10px',\n        marginBottom:'30px',\n    }\n    var notificationType = ''\n    if(message.notificationType === 'info'){\n        notificationStyle={...notificationStyle,\n            borderColor: '#097c67',\n            color:'#097c67',\n            backgroundColor:'#bbe2db',\n        }\n        notificationType = 'INFO : '\n    }\n    else if(message.notificationType === 'error'){\n        notificationStyle = {...notificationStyle,\n            borderColor: '#f40606',\n            color:'#f40606',\n            backgroundColor:'#fed2d2',\n        }\n        notificationType = 'ERROR : '\n    }\n    \n\n    return (\n        <div style={notificationStyle}>\n            {notificationType + message.message}\n        </div>\n    );\n};\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = \"/api/persons/\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => newPerson)\n}\n\nconst remove = (person) => {\n  const request = axios.delete(`${baseUrl}${person.id}`)\n  return request.then(() => console.log(`${person.name} has been removed successfully !`))\n}\n\nconst update = (personToModify, newPerson) => {\n  const request = axios.put(`${baseUrl}${personToModify.id}`, newPerson)\n  return request.then(response => response.data)\n}\n\nconst personService = {\n  getAll,\n  create,\n  remove,\n  update\n}\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Submit from './components/Submit'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n  //------    COMPONENT STATES    ------//\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterValue, setFilterValue ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  useEffect(() => {\n    console.log('Fetching contacts from server...')\n    personService\n      .getAll()\n      .then(personsFromServer => setPersons(personsFromServer))\n      .catch(error => {\n        console.log(error.response.data)\n      })\n  },[])\n\n  //------    EVENT HANDLERS    ------//\n  const handleFilterChange = (event) => {\n    console.log('Filter -> ', event.target.value)\n    setFilterValue(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log('Current input value : ', event.target.value);\n    setNewName(event.target.value)\n  }\n  const handlePhoneChange = (event) => {\n    console.log('Current phone value : ->' , event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const displayNotification = (notificationType, message) => {\n    setNotificationMessage({notificationType,message})\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n  //------    ADD PERSON BUTTON HANDLER    ------//\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number: newNumber}\n\n    if (persons.map(person => person.name).includes(newName)) {\n        console.log(`The entered name ${newName} already exists.`);\n        const personToModify = persons.find(person => person.name.toLowerCase() === newPerson.name.toLowerCase())\n        const confirmation = window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one ?`)\n\n        if(confirmation){\n          personService\n            .update(personToModify, newPerson)\n            .then((modifiedPerson) =>{\n              const modifiedPersonList = [...persons] //Create a shallow copy of persons to further change is with the new modofied person\n              modifiedPersonList.forEach(person => {\n                if (person.name.toLowerCase() === modifiedPerson.name.toLowerCase()){\n                  person.number = modifiedPerson.number\n                }\n              })\n              displayNotification('info',`Successfully modified ${newPerson.name} with the new number ${newPerson.number}`);\n              setPersons(modifiedPersonList)\n              setNewName('')\n              setNewNumber('')\n            })\n            .catch(error => {\n              displayNotification('error', `The contact ${personToModify.name} has already been deleted from the server.`)\n              console.log(error.response.data)\n              setPersons(persons.filter(person => person.name.toLowerCase() !== personToModify.name.toLowerCase()))\n            })\n        }\n        \n    }else{\n        personService\n          .create(newPerson)\n          .then(addedPerson =>{\n            setPersons(persons.concat(addedPerson))\n            displayNotification('info',`Successfully added ${newPerson.name} with the number ${newPerson.number}`);\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            displayNotification('error', JSON.stringify(error.response.data.error))\n            console.log(error.response.data)\n          })\n    }\n  }\n\n  //------    REMOVE PERSON BUTTON HANDLER    ------//\n\n  const removePerson = (id) => {\n    const personToDelete = persons.find(person => person.id === id)\n    const confirmation = window.confirm(`Are you sure you want to delete ${personToDelete.name} from your contacts ?`)\n    if (confirmation){\n      personService\n      .remove(personToDelete)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        console.log('Deleted');\n        displayNotification('info', `${personToDelete.name} has been removed from your contacts.`)\n      })\n    }\n  }\n\n\n  //------    RETURN FIELD OF THE COMPONENT    ------//\n  return (\n\n    <div>\n      <h1>Phonebook</h1>\n      \n      <Notification message={notificationMessage}/>\n      \n      <Filter onChangeHandler={handleFilterChange}/>\n      <Submit \n        onSubmitHandler={addPerson} \n        phoneChangeHandler={handlePhoneChange} \n        nameChangeHandler={handleNameChange} \n        nameValue={newName} \n        phoneValue={newNumber}\n      />\n      <h2>Persons</h2>\n      <Persons \n        persons={persons} \n        filterValue={filterValue}\n        deletePersonHandler={removePerson}\n      />\n    </div>\n\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}